	.z80
	cseg

WIDTH	equ	40

RCLS	equ	5203h
ADISP	equ	5206h
KYWAIT	equ	5209h
KEYIN	equ	520ch

CADRS	equ	0f054h
RST5HK	equ	0f13ch
RST6HK	equ	0f13fh
VRMTOP	equ	0f800h

SWTHIO	equ	098h
BANKIO	equ	09ch
VRMCTL	equ	0d0h
PS2KEY	equ	0d4h

	.phase	0d800h
	jp	rdslt
	jp	wrslt
	jp	enaslt
	jp	setrd
	jp	initxt
	jp	chsns
	jp	chget
	jp	chput
	jp	lptout
	jp	beep
	jp	cls
	jp	posit
	jp	rslreg
	jp	inivdp
	jp	sq1bJ

romcal:	push	af
	ld	a,00010000b
	out	(BANKIO),a
	pop	af
	call	hlcall
	push	af
	ld	a,(svbank)
	out	(BANKIO),a
	pop	af
	ret
hlcall:	jp	(hl)

chget:	push	bc
	ld	a,(keycnt)
	ld	b,a
chget0:	in	a,(PS2KEY)
	or	a
	jr	z,chget1
	call	w27ms
	djnz	chget0
	ld	a,1
	jr	chget2
chget1:	ld	a,12
chget2:	ld	(keycnt),a
chget3:	in	a,(PS2KEY)
	or	a
	jr	z,chget3
	pop	bc
	ret

chput:	push	de
	push	hl
	push	af
	ld	hl,(CADRS)
	ld	d,00000111b
	call	colset
	cp	09h
	jr	nz,chput0
	ld	de,VRMTOP
	sbc	hl,de
	call	getx
	add	a,8
	and	a,11111000b
	ld	d,high VRMTOP
	ld	e,a
	add	hl,de
	ld	(CADRS),hl
	jr	chputZ
chput0:	cp	7fh
	jr	nz,chputY
	dec	hl
	ld	(CADRS),hl
	push	hl
	ld	a,' '
	ld	hl,ADISP
	call	romcal
	pop	hl
	ld	(CADRS),hl
	jr	chputZ
chputY:	ld	hl,ADISP
	call	romcal
	ld	hl,(CADRS)
chputZ:	ld	d,01110000b
	call	colset
	pop	af
	pop	hl
	pop	de
	ret

posit:	push	de
	push	hl
	push	af
	dec	h
	dec	l
	ld	a,h
	ld	h,0
	add	hl,hl	;*=2
	add	hl,hl	;*=4
	add	hl,hl	;*=8
	ld	d,h
	ld	e,l
	add	hl,hl	;*=16
	add	hl,hl	;*=32
	add	hl,de	;*=40
	ld	d,high VRMTOP
	ld	e,a
	add	hl,de
	push	hl
	ld	hl,(CADRS)
	ld	d,00000111b
	call	colset
	pop	hl
	ld	(CADRS),hl
	ld	d,01110000b
	call	colset
	pop	af
	pop	hl
	pop	de
	ret

beep:	push	bc
	push	af
	ld	bc,0
	ld	a,11111111b
w0:	out	(SWTHIO),a
w1:	nop
	djnz	w1
	xor	00100000b
	dec	c
	jp	nz,w0
	pop	af
	pop	bc
	ret

cls:	push	hl
	ld	hl,RCLS
	call	romcal
	pop	hl
	ret

initxt:	jp	cls

chsns:
rslreg:	xor	a
rdslt:
wrslt:
enaslt:
setrd:
lptout:	ret

inivdp:	push	hl
	ld	hl,vdprst
	ld	(RST5HK+1),hl
	ld	hl,vdpwrt
	ld	(RST6HK+1),hl
	pop	hl
	ret

vdprst:	push	hl
	ld	hl,VRMTOP
	ld	(currpo),hl
	pop	hl
	ret

vdpwrt:	push	hl
	ld	hl,(currpo)
	call	chrset
	inc	hl
	ld	(currpo),hl
	pop	hl
	ret

chrset:	push	de
	push	af
	ld	e,a
	call	vrmset
	pop	af
	pop	de
	ret

colset:	push	af
	inc	hl
	ld	e,(hl)
	ld	a,11110111b
	out	(VRMCTL),a
	ld	(hl),d
	call	vrmset
	dec	hl
	pop	af
	ret

vrmset:	ld	a,11111011b
	out	(VRMCTL),a
	ld	(hl),e
	ld	a,11111100b
	out	(VRMCTL),a
	ret

sq1bJ:	push	de
	push	hl
	ld	de,VRMTOP+WIDTH*25
	ld	hl,(CADRS)
	xor	a
sq1bJ0:	call	chrset
	inc	hl
	push	hl
	or	a
	sbc	hl,de
	pop	hl
	jr	z,sq1bJ1
	jr	c,sq1bJ0
sq1bJ1:	pop	hl
	pop	de
	ret

w27ms:	push	bc
	ld	bc,0010h
w27ms0:	ex	(sp),hl
	ex	(sp),hl
	djnz	w27ms0
	dec	c
	jr	nz,w27ms0
	pop	bc
	ret

getx:	push	bc
	push	hl
	or	a
	ld	bc,WIDTH
getx0:	sbc	hl,bc
	jr	nc,getx0
	add	hl,bc
	ld	a,l
	pop	hl
	ld	b,0
	ld	c,a
	or	a
	sbc	hl,bc
	pop	bc
	ret

svbank:	db	00010000b
keycnt:	db	12
currpo:	dw	0

	db	"ND80-AIDS Version 1.0, "
	db	"converted from MSX by Tetsuo Oda, 2018.",0
	db	"MSX-BIOS, and VDP accessing is simulated with routines@D800h-.",0

	.dephase

	end
